{"version":3,"sources":["user_data/UserData.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","fetch","method","headers","body","JSON","stringify","get_result","json","result","success","UserData","resetForm","alert","msg","console","log","setInputValue","doLogin","height","margin","App","highs","lows","xScale","d3","range","yScale","xAxis","scale","tickFormat","yAxis","d","lineGenerator","fetch_json","data","dates","comments","new_data","i","year","parseInt","created_at","substring","month","date","push","Date","timeDomain","commentMax","domain","x","y","refs","call","width","fill","stroke","ref","transform","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAae,MATd,aAAe,oBACdA,YAAiBC,KAAM,CACtBC,SAAS,EACTC,YAAY,EACZC,SAAU,M,gBCWEC,E,uKAfD,IAAD,OACL,OACI,qBAAKC,UAAU,aAAf,SACC,uBACCA,UAAU,QACVC,KAAON,KAAKO,MAAMD,KAClBE,YAAcR,KAAKO,MAAMD,KACzBG,MAAQT,KAAKO,MAAME,MACnBC,SAAW,SAACC,GAAD,OAAO,EAAKJ,MAAMG,SAASC,EAAEC,OAAOH,gB,GAVpCI,IAAMC,WCiBhBC,E,uKAfD,IAAD,OACL,OACI,qBAAKV,UAAU,eAAf,SACC,wBACCA,UAAU,MACVW,SAAWhB,KAAKO,MAAMS,SACtBC,QAAU,kBAAM,EAAKV,MAAMU,WAH5B,SAKGjB,KAAKO,MAAMW,a,GAVAL,IAAMC,WCkGlBK,E,kDA7Fd,WAAYZ,GAAQ,IAAD,8BAClB,cAAMA,IACDa,MAAQ,CACZjB,SAAU,GACVkB,SAAU,GACVC,gBAAgB,GALC,E,0DASLC,EAAUC,IACvBA,EAAMA,EAAIC,QACHC,OAAS,IAChB1B,KAAK2B,SAAL,eACEJ,EAAWC,M,kCAKbxB,KAAK2B,SAAS,CACbxB,SAAU,GACVkB,SAAU,GACVC,gBAAgB,M,qJAKbtB,KAAKoB,MAAMjB,S,oDAIXH,KAAKoB,MAAMC,S,wDAIfrB,KAAK2B,SAAS,CACbL,gBAAgB,I,kBAIOM,MAAM,SAAU,CACtCC,OAAQ,OACRC,QAAS,CACR,OAAU,mBACV,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAU,CACpB9B,SAAUH,KAAKoB,MAAMjB,SACrBkB,SAAUrB,KAAKoB,MAAMC,a,cARnBa,E,iBAYeA,EAAWC,O,SAA1BC,E,SACSA,EAAOC,SACnBC,EAASpC,YAAa,EACtBoC,EAASnC,SAAWiC,EAAOjC,UAEpBiC,IAAWA,EAAOC,UACzBrC,KAAKuC,YACLC,MAAMJ,EAAOK,M,kDAIdC,QAAQC,IAAR,MACA3C,KAAKuC,Y,+IAIM,IAAD,OACL,OACI,sBAAKlC,UAAU,YAAf,uBAEC,cAAC,EAAD,CACCC,KAAK,WACLE,YAAY,WACZC,MAAQT,KAAKoB,MAAMjB,SAAWH,KAAKoB,MAAMjB,SAAW,GACpDO,SAAW,SAACc,GAAD,OAAS,EAAKoB,cAAc,WAAYpB,MAEpD,cAAC,EAAD,CACClB,KAAK,WACLE,YAAY,WACZC,MAAQT,KAAKoB,MAAMC,SAAWrB,KAAKoB,MAAMC,SAAW,GACpDX,SAAW,SAACc,GAAD,OAAS,EAAKoB,cAAc,WAAYpB,MAEjD,cAAC,EAAD,CACIN,KAAK,QACLF,SAAahB,KAAKoB,MAAME,eACxBL,QAAY,kBAAM,EAAK4B,oB,GAxFnBhC,IAAMC,W,gBCIxBgC,EAAS,IACTC,EAAgB,GAAhBA,EAA2B,EAA3BA,EAAsC,GAAtCA,EAAgD,GAMhDC,E,4MAEF5B,MAAQ,CACJ6B,MAAO,KACPC,KAAM,M,EAGVC,OAASC,MAAeC,MAAM,CAACN,EAfrB,IAe0CA,I,EACpDO,OAASF,MAAiBC,MAAM,CAACP,EAASC,EAAYA,I,EAEtDQ,MAAQH,MAAgBI,MAAM,EAAKL,QAAQM,WAAWL,IAAc,a,EACpEM,MAAQN,MAAcI,MAAM,EAAKF,QAAQG,YAAW,SAAAE,GAAC,gBAAOA,M,EAE5DC,cAAgBR,M,4OAIexB,MAAM,cAAe,CACxCC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,sB,cAJpBI,E,gBAQeA,EAAWC,O,YAA1BC,E,UAESA,EAAOC,Q,uBACN,mD,UACaT,MADb,oD,eACNiC,E,iBACeA,EAAW1B,O,QAI9B,IAJM2B,E,OACAC,EAAQ,GACRC,EAAW,GACXC,EAAW,GACTC,EAAI,EAAGA,EAAIJ,EAAKpC,OAAQwC,IACtBC,EAAOC,SAASN,EAAKI,GAAGG,WAAWC,UAAU,EAAG,IAChDC,EAAQH,SAASN,EAAKI,GAAGG,WAAWC,UAAU,EAAG,IACjDE,EAAOJ,SAASN,EAAKI,GAAGG,WAAWC,UAAU,EAAG,KACtDP,EAAMU,KAAK,IAAIC,KAAKP,EAAMI,EAAQ,EAAGC,IACrCR,EAASS,KAAKX,EAAKI,GAAGF,UACtBC,EAASQ,KAAK,IACdR,EAASC,GAAGG,WAAaN,EAAMG,GAC/BD,EAASC,GAAGF,SAAWA,EAASE,GAE9BS,EAAavB,IAAUa,GAAU,SAAAN,GAAC,OAAIA,EAAEU,cACxCO,EAAaxB,IAAOa,GAAU,SAAAN,GAAC,OAAIA,EAAEK,YAC3ChE,KAAKmD,OAAO0B,OAAOF,GACnB3E,KAAKsD,OAAOuB,OAAO,CAAC,EAAGD,IACvB5E,KAAK4D,cAAckB,GAAE,SAAAnB,GAAC,OAAI,EAAKR,OAAOQ,EAAEU,eACxCrE,KAAK4D,cAAcmB,GAAE,SAAApB,GAAC,OAAI,EAAKL,OAAOK,EAAEK,aAClCf,EAAQjD,KAAK4D,cAAcK,GACjCjE,KAAK2B,SAAS,CAACsB,UACfX,EAASpC,YAAa,EACtBoC,EAASnC,SAAWiC,EAAOjC,SAC3BmC,EAASrC,SAAU,E,wBAEnBqC,EAASrC,SAAU,EACnBqC,EAASpC,YAAa,E,0DAK1BoC,EAASrC,SAAU,EACnBqC,EAASpC,YAAa,E,2JAK1BkD,IAAUpD,KAAKgF,KAAKzB,OAAO0B,KAAKjF,KAAKuD,OACrCH,IAAUpD,KAAKgF,KAAKtB,OAAOuB,KAAKjF,KAAK0D,S,4KAKV9B,MAAM,UAAW,CACpCC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,sB,cAJpBI,E,gBAQeA,EAAWC,O,QAA1BC,E,SAESA,EAAOC,UAChBC,EAASpC,YAAa,EACtBoC,EAASnC,SAAW,I,kDAKxBuC,QAAQC,IAAR,M,+IAIE,IAAD,OAEL,OAAGL,EAASrC,QAEJ,qBAAKI,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,uCAQLiC,EAASpC,WACiB,SAAtBoC,EAASnC,SAEJ,qBAAKE,UAAU,MAAf,SACI,sBAAKA,UAAU,YAAf,UACI,sBACI6E,MA1HtB,IA2HsBpC,OAASA,EAFb,UAII,sBAAMa,EAAI3D,KAAKoB,MAAM6B,MAAQkC,KAAK,OAAOC,OA1HjE,YA2HwB,8BACI,mBAAGC,IAAI,QAAQC,UAAS,uBAAoBxC,EAASC,EAA7B,OACxB,mBAAGsC,IAAI,QAAQC,UAAS,oBAAiBvC,EAAjB,gBAGhC,cAAC,EAAD,CACI7B,KAAO,SACPF,UAAa,EACbC,QAAY,kBAAM,EAAKsE,oBAKjCjD,EAASnC,SAEX,qBAAKE,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,cAAC,EAAD,CACIa,KAAO,SACPF,UAAa,EACbC,QAAY,kBAAM,EAAKsE,mBAoB3C,qBAAKlF,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,cAAC,EAAD,Y,GAhKNQ,IAAMC,WAwKT0E,cAASxC,GC5KTyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f4d8d88e.chunk.js","sourcesContent":["import { extendObservable } from 'mobx';\r\n\r\n\r\nclass UserData {\r\n\tconstructor() {\r\n\t\textendObservable(this, {\r\n\t\t\tloading: true,\r\n\t\t\tisLoggedIn: false,\r\n\t\t\tusername: '',\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default new UserData();\r\n","import React from 'react'\r\n\r\nclass InputField extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"inputField\">\r\n            \t<input\r\n            \t\tclassName='input'\r\n            \t\ttype={ this.props.type }\r\n            \t\tplaceholder={ this.props.type }\r\n            \t\tvalue={ this.props.value }\r\n            \t\tonChange={ (e) => this.props.onChange(e.target.value) }\r\n            \t/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputField;\r\n","import React from 'react'\r\n\r\nclass SubmitButton extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"submitButton\">\r\n            \t<button\r\n            \t\tclassName='btn'\r\n            \t\tdisabled={ this.props.disabled }\r\n            \t\tonClick={ () => this.props.onClick() }\r\n            \t>\r\n            \t\t{ this.props.text }\r\n            \t</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserData from './user_data/UserData';\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tusername: '',\r\n\t\t\tpassword: '',\r\n\t\t\tbuttonDisabled: false\r\n\t\t}\r\n\t}\r\n\r\n\tsetInputValue(property, val) {\r\n\t\tval = val.trim();\r\n\t\tif(val.length > 12) return;\r\n\t\tthis.setState({\r\n\t\t\t[property]: val\r\n\t\t});\r\n\t}\r\n\r\n\tresetForm() {\r\n\t\tthis.setState({\r\n\t\t\tusername: '',\r\n\t\t\tpassword: '',\r\n\t\t\tbuttonDisabled: false\r\n\t\t})\r\n\t}\r\n\r\n\tasync doLogin() {\r\n\t\tif(!this.state.username) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(!this.state.password) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tbuttonDisabled: true\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tlet get_result = await fetch('/login', {\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tusername: this.state.username,\r\n\t\t\t\t\tpassword: this.state.password\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tlet result = await get_result.json();\r\n\t\t\tif(result && result.success) {\r\n\t\t\t\tUserData.isLoggedIn = true;\r\n\t\t\t\tUserData.username = result.username;\r\n\t\t\t}\r\n\t\t\telse if(result && !result.success) {\r\n\t\t\t\tthis.resetForm();\r\n\t\t\t\talert(result.msg);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tthis.resetForm();\r\n\t\t}\r\n\t}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"loginForm\">\r\n            \tLogin Form\r\n            \t<InputField\r\n            \t\ttype=\"username\"\r\n            \t\tplaceholder=\"Username\"\r\n            \t\tvalue={ this.state.username ? this.state.username : '' }\r\n            \t\tonChange={ (val) => this.setInputValue('username', val) }\r\n            \t/>\r\n            \t<InputField\r\n            \t\ttype=\"password\"\r\n            \t\tplaceholder=\"Password\"\r\n            \t\tvalue={ this.state.password ? this.state.password : '' }\r\n            \t\tonChange={ (val) => this.setInputValue('password', val) }\r\n            \t/>\r\n                <SubmitButton\r\n                    text='Login'\r\n                    disabled = { this.state.buttonDisabled }\r\n                    onClick = { () => this.doLogin() }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from 'react'\nimport UserData from './user_data/UserData';\nimport { observer } from 'mobx-react';\nimport LoginForm from './LoginForm';\nimport SubmitButton from './SubmitButton';\nimport './App.css';\nimport * as d3 from 'd3'\n\nconst width = 650;\nconst height = 450;\nconst margin = { top: 20, right: 5, bottom: 20, left: 35};\nconst red = \"#eb6a5b\";\nconst green = \"#b6e86f\";\nconst blue = \"#52b6ca\";\n\n\nclass App extends React.Component {\n\n    state = {\n        highs: null,\n        lows: null\n    };\n\n    xScale = d3.scaleTime().range([margin.left, width - margin.right]);\n    yScale = d3.scaleLinear().range([height - margin.top, margin.bottom]);\n\n    xAxis = d3.axisBottom().scale(this.xScale).tickFormat(d3.timeFormat(\"%y/%m/%d\"));\n    yAxis = d3.axisLeft().scale(this.yScale).tickFormat(d => `${d}`);\n\n    lineGenerator = d3.line();\n\n    async componentDidMount() {\n        try {\n            let get_result = await fetch('/isLoggedIn', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            let result = await get_result.json();\n\n            if(result && result.success) {\n                let url = \"https://api.github.com/repositories/19438/issues\";\n                let fetch_json = await fetch(url);\n                const data = await fetch_json.json();\n                const dates = [];\n                const comments = [];\n                const new_data = [];\n                for(var i = 0; i < data.length; i++) {\n                    const year = parseInt(data[i].created_at.substring(0, 4));\n                    const month = parseInt(data[i].created_at.substring(5, 7));\n                    const date = parseInt(data[i].created_at.substring(8, 10));\n                    dates.push(new Date(year, month - 1, date));\n                    comments.push(data[i].comments);\n                    new_data.push([]);\n                    new_data[i].created_at = dates[i];\n                    new_data[i].comments = comments[i];\n                }\n                const timeDomain = d3.extent(new_data, d => d.created_at);\n                const commentMax = d3.max(new_data, d => d.comments);\n                this.xScale.domain(timeDomain);\n                this.yScale.domain([0, commentMax]);\n                this.lineGenerator.x(d => this.xScale(d.created_at));\n                this.lineGenerator.y(d => this.yScale(d.comments));\n                const highs = this.lineGenerator(new_data);\n                this.setState({highs});\n                UserData.isLoggedIn = true;\n                UserData.username = result.username;\n                UserData.loading = false;\n            } else {\n                UserData.loading = false;\n                UserData.isLoggedIn = false;\n            }\n        }\n\n        catch(e) {\n            UserData.loading = false;\n            UserData.isLoggedIn = false;\n        }\n    }\n\n    componentDidUpdate() {\n        d3.select(this.refs.xAxis).call(this.xAxis);\n        d3.select(this.refs.yAxis).call(this.yAxis);\n    }\n\n    async doLogout() {\n        try {\n            let get_result = await fetch('/logout', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            let result = await get_result.json();\n\n            if(result && result.success) {\n                UserData.isLoggedIn = false;\n                UserData.username = '';\n            }\n        }\n\n        catch(e) {\n            console.log(e);\n        }\n    }\n\n    render() {\n\n        if(UserData.loading) {\n            return (\n                <div className=\"app\">\n                    <div className=\"container\">\n                        Loading, please wait...\n                    </div>\n                </div>\n            );\n        }\n\n        else {\n            if(UserData.isLoggedIn) {\n                if(UserData.username === \"John\") {\n                    return (\n                        <div className=\"app\">\n                            <div className=\"container\">\n                                <svg \n                                    width={ width }\n                                    height={ height }\n                                >\n                                    <path d={ this.state.highs } fill=\"none\" stroke={ red }/>\n                                    <g>\n                                        <g ref=\"xAxis\" transform={ `translate(0, ${ height - margin.bottom })` } />\n                                        <g ref=\"yAxis\" transform={ `translate(${ margin.left }, 0)` } />\n                                    </g>\n                                </svg>\n                                <SubmitButton\n                                    text={ 'Logout' }\n                                    disabled = { false }\n                                    onClick = { () => this.doLogout() }\n                                />\n                            </div>\n                        </div>\n                    );\n                } else if(UserData.username === \"MICKY\") {\n                    return (\n                        <div className=\"app\">\n                            <div className=\"container\">\n                                <SubmitButton\n                                    text={ 'Logout' }\n                                    disabled = { false }\n                                    onClick = { () => this.doLogout() }\n                                />\n                            </div>\n                        </div>\n                    );\n                } else {\n                    return (\n                        <div className=\"app\">\n                            <div className=\"container\">\n                                <SubmitButton\n                                    text={ 'Logout' }\n                                    disabled = { false }\n                                    onClick = { () => this.doLogout() }\n                                />\n                            </div>\n                        </div>\n                    );\n                }\n            }\n            return (\n                <div className=\"app\">\n                    <div className=\"container\">\n                        <LoginForm/>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}