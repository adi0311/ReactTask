{"version":3,"sources":["user_data/UserData.js","InputField.js","SubmitButton.js","LoginForm.js","PieChart.js","LineChart.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","fetch","method","headers","body","JSON","stringify","get_result","json","result","success","UserData","resetForm","alert","msg","console","log","setInputValue","doLogin","PieChart","data","outerRadius","innerRadius","width","height","colorScale","d3","interpolator","domain","useEffect","select","remove","svg","append","attr","arcGenerator","pieGenerator","padAngle","d","comments","selectAll","enter","style","_","i","drawChart","id","margin","LineChart","xScale","range","yScale","xAxis","scale","tickFormat","yAxis","lineGenerator","timeDomain","created_at","commentMax","x","y","highs","refs","call","fill","stroke","ref","transform","App","lows","fetchData","fetch_json","new_data","year","parseInt","substring","month","date","push","Date","labels","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4bf105c.chunk.js","sourcesContent":["import { extendObservable } from 'mobx';\r\n\r\n\r\nclass UserData {\r\n\tconstructor() {\r\n\t\textendObservable(this, {\r\n\t\t\tloading: true,\r\n\t\t\tisLoggedIn: false,\r\n\t\t\tusername: '',\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default new UserData();\r\n","import React from 'react'\r\n\r\nclass InputField extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"inputField\">\r\n            \t<input\r\n            \t\tclassName='input'\r\n            \t\ttype={ this.props.type }\r\n            \t\tplaceholder={ this.props.type }\r\n            \t\tvalue={ this.props.value }\r\n            \t\tonChange={ (e) => this.props.onChange(e.target.value) }\r\n            \t/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputField;\r\n","import React from 'react'\r\n\r\nclass SubmitButton extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"submitButton\">\r\n            \t<button\r\n            \t\tclassName='btn'\r\n            \t\tdisabled={ this.props.disabled }\r\n            \t\tonClick={ () => this.props.onClick() }\r\n            \t>\r\n            \t\t{ this.props.text }\r\n            \t</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserData from './user_data/UserData';\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tusername: '',\r\n\t\t\tpassword: '',\r\n\t\t\tbuttonDisabled: false\r\n\t\t}\r\n\t}\r\n\r\n\tsetInputValue(property, val) {\r\n\t\tval = val.trim();\r\n\t\tif(val.length > 12) return;\r\n\t\tthis.setState({\r\n\t\t\t[property]: val\r\n\t\t});\r\n\t}\r\n\r\n\tresetForm() {\r\n\t\tthis.setState({\r\n\t\t\tusername: '',\r\n\t\t\tpassword: '',\r\n\t\t\tbuttonDisabled: false\r\n\t\t})\r\n\t}\r\n\r\n\tasync doLogin() {\r\n\t\tif(!this.state.username) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(!this.state.password) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tbuttonDisabled: true\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tlet get_result = await fetch('/login', {\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tusername: this.state.username,\r\n\t\t\t\t\tpassword: this.state.password\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tlet result = await get_result.json();\r\n\t\t\tif(result && result.success) {\r\n\t\t\t\tUserData.isLoggedIn = true;\r\n\t\t\t\tUserData.username = result.username;\r\n\t\t\t}\r\n\t\t\telse if(result && !result.success) {\r\n\t\t\t\tthis.resetForm();\r\n\t\t\t\talert(result.msg);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tthis.resetForm();\r\n\t\t}\r\n\t}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"loginForm\">\r\n            \tLogin Form\r\n            \t<InputField\r\n            \t\ttype=\"username\"\r\n            \t\tplaceholder=\"Username\"\r\n            \t\tvalue={ this.state.username ? this.state.username : '' }\r\n            \t\tonChange={ (val) => this.setInputValue('username', val) }\r\n            \t/>\r\n            \t<InputField\r\n            \t\ttype=\"password\"\r\n            \t\tplaceholder=\"Password\"\r\n            \t\tvalue={ this.state.password ? this.state.password : '' }\r\n            \t\tonChange={ (val) => this.setInputValue('password', val) }\r\n            \t/>\r\n                <SubmitButton\r\n                    text='Login'\r\n                    disabled = { this.state.buttonDisabled }\r\n                    onClick = { () => this.doLogin() }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { useEffect } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nfunction PieChart(props) {\r\n    const {\r\n        data,\r\n        outerRadius,\r\n        innerRadius,\r\n    } = props;\r\n\r\n    const margin = {\r\n        top: 50, right: 50, bottom: 50, left: 50,\r\n    };\r\n\r\n    const width = 2 * outerRadius + margin.left + margin.right;\r\n    const height = 2 * outerRadius + margin.top + margin.bottom;\r\n\r\n    const colorScale = d3     \r\n                    .scaleSequential()      \r\n                    .interpolator(d3.interpolateCool)      \r\n                    .domain([0, data.length]);\r\n\r\n    useEffect(() => {\r\n        drawChart();\r\n    }, [data]);\r\n\r\n    function drawChart() {\r\n        // Remove the old svg\r\n        d3.select('#pie-container')\r\n            .select('svg')\r\n            .remove();\r\n\r\n        // Create new svg\r\n        const svg = d3\r\n                .select('#pie-container')\r\n                .append('svg')\r\n                .attr('width', width)\r\n                .attr('height', height)\r\n                .append('g')\r\n                .attr('transform', `translate(${width / 2}, ${height / 2})`);\r\n\r\n        const arcGenerator = d3\r\n                            .arc()\r\n                            .innerRadius(innerRadius)\r\n                            .outerRadius(outerRadius);\r\n\r\n        const pieGenerator = d3\r\n                            .pie()\r\n                            .padAngle(0)\r\n                            .value((d) => d.comments);\r\n\r\n        const arc = svg\r\n                    .selectAll()\r\n                    .data(pieGenerator(data))\r\n                    .enter();\r\n\r\n        // Append arcs\r\n        arc\r\n        .append('path')\r\n        .attr('d', arcGenerator)\r\n        .style('fill', (_, i) => colorScale(i))\r\n        .style('stroke', '#ffffff')\r\n        .style('stroke-width', 0);\r\n\r\n        // Append text labels\r\n        // arc\r\n        // .append('text')\r\n        // .attr('text-anchor', 'middle')\r\n        // .attr('alignment-baseline', 'middle')\r\n        // .text((d) => d.data.labels)\r\n        // .style('fill', (_, i) => colorScale(data.length - i))\r\n        // .attr('transform', (d) => {\r\n        //     const [x, y] = arcGenerator.centroid(d);\r\n        //     return `translate(${x}, ${y})`;\r\n        // });\r\n    }    \r\n\r\n    return <div id=\"pie-container\" />;\r\n}\r\n\r\nexport default PieChart;\r\n","import React from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst margin = { top: 20, right: 5, bottom: 20, left: 35};\r\nconst red = \"#eb6a5b\";\r\nconst green = \"#b6e86f\";\r\nconst blue = \"#52b6ca\";\r\n\r\nclass LineChart extends React.Component {\r\n\r\n    state = {\r\n        data: null\r\n    };\r\n\r\n    xScale = d3.scaleTime().range([margin.left, this.props.width - margin.right]);\r\n    yScale = d3.scaleLinear().range([this.props.height - margin.top, margin.bottom]);\r\n\r\n    xAxis = d3.axisBottom().scale(this.xScale).tickFormat(d3.timeFormat(\"%y/%m/%d\"));\r\n    yAxis = d3.axisLeft().scale(this.yScale).tickFormat(d => `${d}`);\r\n\r\n    lineGenerator = d3.line();\r\n\r\n    componentDidMount() {\r\n        const timeDomain = d3.extent(this.props.data, d => d.created_at);\r\n        const commentMax = d3.max(this.props.data, d => d.comments);\r\n        this.xScale.domain(timeDomain);\r\n        this.yScale.domain([0, commentMax]);\r\n        this.lineGenerator.x(d => this.xScale(d.created_at));\r\n        this.lineGenerator.y(d => this.yScale(d.comments));\r\n        const highs = this.lineGenerator(this.props.data);\r\n        this.setState({data: highs});\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        d3.select(this.refs.xAxis).call(this.xAxis);\r\n        d3.select(this.refs.yAxis).call(this.yAxis);\r\n    }\r\n\r\n    render() {\r\n        return <svg \r\n            width={ this.props.width }\r\n            height={ this.props.height }\r\n        >\r\n            <path d={ this.state.data } fill=\"none\" stroke={ red }/>\r\n            <g>\r\n                <g ref=\"xAxis\" transform={ `translate(0, ${ this.props.height - margin.bottom })` } />\r\n                <g ref=\"yAxis\" transform={ `translate(${ margin.left }, 0)` } />\r\n            </g>\r\n        </svg>;\r\n    }\r\n}\r\n\r\nexport default LineChart;\r\n","import React from 'react'\nimport UserData from './user_data/UserData';\nimport { observer } from 'mobx-react';\nimport LoginForm from './LoginForm';\nimport SubmitButton from './SubmitButton';\nimport PieChart from './PieChart';\nimport LineChart from './LineChart';\nimport './App.css';\n\nconst width = 650;\nconst height = 450;\n\n\nclass App extends React.Component {\n\n    state = {\n        lows: null\n    };\n\n    async componentDidMount() {\n        await this.fetchData();\n        try {\n            let get_result = await fetch('/isLoggedIn', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            let result = await get_result.json();\n\n            if(result && result.success) {\n                UserData.isLoggedIn = true;\n                UserData.username = result.username;\n                UserData.loading = false;\n            } else {\n                UserData.loading = false;\n                UserData.isLoggedIn = false;\n            }\n        }\n\n        catch(e) {\n            UserData.loading = false;\n            UserData.isLoggedIn = false;\n        }\n    }\n\n\n    async fetchData() {\n        let url = \"https://api.github.com/repositories/19438/issues\";\n        let fetch_json = await fetch(url);\n        const data = await fetch_json.json();\n        const new_data = [];\n        for(var i = 0; i < data.length; i++) {\n            const year = parseInt(data[i].created_at.substring(0, 4));\n            const month = parseInt(data[i].created_at.substring(5, 7));\n            const date = parseInt(data[i].created_at.substring(8, 10));\n            new_data.push({});\n            new_data[i].created_at = new Date(year, month - 1, date);\n            new_data[i].comments = data[i].comments;\n            new_data[i].labels = \"date\";\n        }\n        this.setState({\n            lows: new_data\n        });\n    }\n\n    async doLogout() {\n        try {\n            let get_result = await fetch('/logout', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            let result = await get_result.json();\n\n            if(result && result.success) {\n                UserData.isLoggedIn = false;\n                UserData.username = '';\n            }\n        }\n\n        catch(e) {\n            console.log(e);\n        }\n    }\n\n    render() {\n\n        if(UserData.loading) {\n            return (\n                <div className=\"app\">\n                    <div className=\"container\">\n                        Loading, please wait...\n                    </div>\n                </div>\n            );\n        }\n\n        else {\n            if(UserData.isLoggedIn) {\n                if(UserData.username === \"John\") {\n                    return (\n                        <div className=\"app\">\n                            <div className=\"container\">\n                                <LineChart\n                                    height={ height }\n                                    width={ width }\n                                    data={ this.state.lows }\n                                />\n                                <SubmitButton\n                                    text={ 'Logout' }\n                                    disabled = { false }\n                                    onClick = { () => this.doLogout() }\n                                />\n                            </div>\n                        </div>\n                    );\n                } else if(UserData.username === \"MICKY\") {\n                    return (\n                        <div className=\"app\">\n                            <div className=\"container\">\n                                <svg\n                                    width={ width }\n                                    height={ height }\n                                >\n                                    <PieChart\n                                        outerRadius={200}\n                                        innerRadius={0}\n                                        data={ this.state.lows }\n                                    />\n                                </svg>\n                                <SubmitButton\n                                    text={ 'Logout' }\n                                    disabled = { false }\n                                    onClick = { () => this.doLogout() }\n                                />\n                            </div>\n                        </div>\n                    );\n                } else {\n                    return (\n                        <div className=\"app\">\n                            <div className=\"container\">\n                                <SubmitButton\n                                    text={ 'Logout' }\n                                    disabled = { false }\n                                    onClick = { () => this.doLogout() }\n                                />\n                            </div>\n                        </div>\n                    );\n                }\n            }\n            return (\n                <div className=\"app\">\n                    <div className=\"container\">\n                        <LoginForm/>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}