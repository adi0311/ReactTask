{"version":3,"sources":["user_data/UserData.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","fetch","method","headers","body","JSON","stringify","get_result","json","result","success","UserData","data","console","log","resetForm","alert","msg","setInputValue","doLogin","App","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.979d4d0e.chunk.js","sourcesContent":["import { extendObservable } from 'mobx';\r\n\r\n\r\nclass UserData {\r\n\tconstructor() {\r\n\t\textendObservable(this, {\r\n\t\t\tloading: true,\r\n\t\t\tisLoggedIn: false,\r\n\t\t\tusername: '',\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default new UserData();\r\n","import React from 'react'\r\n\r\nclass InputField extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"inputField\">\r\n            \t<input\r\n            \t\tclassName='input'\r\n            \t\ttype={ this.props.type }\r\n            \t\tplaceholder={ this.props.type }\r\n            \t\tvalue={ this.props.value }\r\n            \t\tonChange={ (e) => this.props.onChange(e.target.value) }\r\n            \t/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputField;\r\n","import React from 'react'\r\n\r\nclass SubmitButton extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"submitButton\">\r\n            \t<button\r\n            \t\tclassName='btn'\r\n            \t\tdisabled={ this.props.disabled }\r\n            \t\tonClick={ () => this.props.onClick() }\r\n            \t>\r\n            \t\t{ this.props.text }\r\n            \t</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserData from './user_data/UserData';\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tusername: '',\r\n\t\t\tpassword: '',\r\n\t\t\tbuttonDisabled: false\r\n\t\t}\r\n\t}\r\n\r\n\tsetInputValue(property, val) {\r\n\t\tval = val.trim();\r\n\t\tif(val.length > 12) return;\r\n\t\tthis.setState({\r\n\t\t\t[property]: val\r\n\t\t});\r\n\t}\r\n\r\n\tresetForm() {\r\n\t\tthis.setState({\r\n\t\t\tusername: '',\r\n\t\t\tpassword: '',\r\n\t\t\tbuttonDisabled: false\r\n\t\t})\r\n\t}\r\n\r\n\tasync doLogin() {\r\n\t\tif(!this.state.username) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(!this.state.password) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tbuttonDisabled: true\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tlet get_result = await fetch('/login', {\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tusername: this.state.username,\r\n\t\t\t\t\tpassword: this.state.password\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tlet result = await get_result.json();\r\n\t\t\tif(result && result.success) {\r\n\t\t\t\tUserData.isLoggedIn = true;\r\n\t\t\t\tUserData.username = result.username;\r\n\t\t\t\tconst url = \"https://api.github.com/repositories/19438/issues\";\r\n\t\t\t\tconst result = await(fetch(url));\r\n\t\t\t\tconst data = await result.json();\r\n\t\t\t\tconsole.log(data[0]);\r\n\t\t\t}\r\n\t\t\telse if(result && result.success == false) {\r\n\t\t\t\tthis.resetForm();\r\n\t\t\t\talert(result.msg);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tthis.resetForm();\r\n\t\t}\r\n\t}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"loginForm\">\r\n            \tLogin Form\r\n            \t<InputField\r\n            \t\ttype=\"username\"\r\n            \t\tplaceholder=\"Username\"\r\n            \t\tvalue={ this.state.username ? this.state.username : '' }\r\n            \t\tonChange={ (val) => this.setInputValue('username', val) }\r\n            \t/>\r\n            \t<InputField\r\n            \t\ttype=\"password\"\r\n            \t\tplaceholder=\"Password\"\r\n            \t\tvalue={ this.state.password ? this.state.password : '' }\r\n            \t\tonChange={ (val) => this.setInputValue('password', val) }\r\n            \t/>\r\n                <SubmitButton\r\n                    text='Login'\r\n                    disabled = { this.state.buttonDisabled }\r\n                    onClick = { () => this.doLogin() }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from 'react'\nimport UserData from './user_data/UserData';\nimport { observer } from 'mobx-react';\nimport LoginForm from './LoginForm';\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton';\nimport './App.css';\n\nclass App extends React.Component {\n\n    async componentDidMount() {\n        try {\n            let get_result = await fetch('/isLoggedIn', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            let result = await get_result.json();\n\n            if(result && result.success) {\n                UserData.loading = false;\n                UserData.isLoggedIn = true;\n                UserData.username = result.username;\n            }\n            else {\n                UserData.loading = false;\n                UserData.isLoggedIn = false;\n            }\n        }\n\n        catch(e) {\n            UserData.loading = false;\n            UserData.isLoggedIn = false;\n        }\n    }\n\n    async doLogout() {\n        try {\n            let get_result = await fetch('/logout', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            let result = await get_result.json();\n\n            if(result && result.success) {\n                UserData.isLoggedIn = false;\n                UserData.username = '';\n            }\n        }\n\n        catch(e) {\n            console.log(e);\n        }\n    }\n\n    render() {\n\n        if(UserData.loading) {\n            return (\n                <div className=\"app\">\n                    <div className=\"container\">\n                        Loading, please wait...\n                    </div>\n                </div>\n            );\n        }\n\n        else {\n            if(UserData.isLoggedIn) {\n                return (\n                    <div className=\"app\">\n                        <div className=\"container\">\n                            Hello, { UserData.username }\n                            <SubmitButton\n                                text={ 'Logout' }\n                                disabled = { false }\n                                onClick = { () => this.doLogout() }\n                            />\n                        </div>\n                    </div>\n                );\n            }\n            return (\n                <div className=\"app\">\n                    <div className=\"container\">\n                        <LoginForm/>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}